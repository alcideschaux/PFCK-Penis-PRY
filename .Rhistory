library(readr)
library(dplyr)
library(forcats)
Markers <- read_csv("PFCK_DB.csv") %>%
select(
-pdl1_tumor_location,
-host_response
)
Markers <- read_csv("../Data/PFCK_DB.csv") %>%
select(
-pdl1_tumor_location,
-host_response
)
Path <- read_csv("../Data/PFCK_Path.csv") %>%
rename("sp" = "caseid") %>%
group_by(sp) %>%
summarize(
tma = max(tma, na.rn = TRUE),
grade = max(grade, na.rm = TRUE),
subtype = unique(subtype)
)
Path <- read_csv("../Data/PFCK_Path.csv")
View(Path)
View(Markers)
library(haven)
Path <- read_dta("../Data/penile_mtor_dataset.dta")
View(Path)
library(readxl)
Path <- read_excel("../Data/tma852-855_dataset.xlsx")
View(Path)
View(Path)
View(Path)
View(Path)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(Path)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(Path)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
table(DB$grade)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
Path <- read_csv("../Data/PNS_PRY.csv") %>%
rename("sp" = "caseid") %>%
filter(sp != "control") %>%
filter(subtype != "giant condyloma")
View(Path)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
library(simpleR)
library(devtools)
install.packages("devtools")
library(devtools)
setwd("~/Dropbox")
setwd("~/Dropbox/Research")
install("simpleR")
?save
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source(Global.R)
getwd()
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
table(DB$pdl1_tumor_location)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
table(DB$pdl1_tumor_location)
View(DB)
table(DB$host_response)
0:3
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
0:3
table(DB$host_response)
table(DB$foxp3_lymph_intensity)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
table(DB$foxp3_lymph_intensity)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
?gather
library(tidyr)
?gather
source("Global.R")
DB %>%
select(pdl1_tumor, pdl1_lymph) %>%
gather(tissue, value)
DB %>%
select(pdl1_tumor, pdl1_lymph) %>%
gather(tissue, value)
DF <- DB %>%
select(pdl1_tumor, pdl1_lymph) %>%
gather(tissue, value) %>%
mutate(
tissue = fct_recode(
tissue,
"Tumor cells" = "pdl1_tumor",
"Lymphocytes" = "pdl1_lymph"
)
)
View(DF)
str(DF)
g2_nice
View(DB)
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
tbl_cuzick
library(simpleR)
tbl_cuzick
source("Global.R")
cuzick(DB$pdl1_tumor, DB$grade)
tbl_cuzick(DB$pdl1_tumor, DB$grade)
data(mtcars)
View(mtcars)
tbl_cuzick(mtcars$mpg, mtcars$cyl)
str(mtcars)
tbl_cuzick(DB$pdl1_tumor, as.numeric(DB$grade))
DF <- tibble(DB$pdl1_tumor, DB$grade)
View(DF)
DF <- tibble(x = DB$pdl1_tumor, z = DB$grade)
View(DF)
complete.cases(DF)
df[complete.cases(DF)]
df[complete.cases(DF) , ]
DF[complete.cases(DF)]
DF[complete.cases(DF , )]
DF[complete.cases(DF) , ]
DF <- DF[complete.cases(DF) , ]
View(DF)
tbl_cuzick(DF$x, DF$z)
tbl_cuzick(DF$x, as.numeric(DF$z))
tbl_cuzick(mtcars$mpg, mtcars$cyl)
tbl_cuzick(as.numeric(DF$x), as.numeric(DF$z))
tbl_cuzick(DF$x, DF$z)
library(simpleR)
tbl_cuzick(DF$x, DF$z)
tbl_cuzick(DF$x, as.numeric(DF$z))
DF <- tibble(x = DB$pdl1_tumor, z = DB$subtype)
DF <- DF[complete.cases(DF) , ]
tbl_cuzick(DF$x, as.numeric(DF$z))
tbl_cuzick(DF$x, DF$z)
tbl_cuzick <-  function(x, z, test.type = "two.sided") {
# Data wrangling
z <- as.numeric(z)
# Statistics estimation
N <- length(z)
n <- unique(z)
ranks <- rank(x)
T <- sum(ranks*z)
p <- (table(z)/N)
E_Z <- sum(unique(z)*p)
E_T <- 0.5*N*(N+1)*E_Z
Var_Z <- sum(unique(z)^2*p)-E_Z^2
Var_T <- N^2*(N+1)/12*Var_Z
Zscore <- (T-E_T)/sqrt(Var_T)
if(test.type == "two.sided") {
pval <- 2*pnorm(-abs(Zscore))
} else if(test.type == "upper") {
pval <- pnorm(Zscore, lower.tail = FALSE)
} else pval <- pnorm(Zscore, lower.tail = TRUE)
# Building the final table
tbl_final <- matrix(
rbind(
format(Zscore, digits = 3),
format(pval, digits = 2, scientific = TRUE)
),
dimnames = list(
c("Z score", "P statistic"),
c("Value")
)
)
# Knitring the final table
knitr::kable(
tbl_final,
caption = "Cuzick test for trend across ordered groups",
align = c("c")
)
}
tbl_cuzick(DF$x, DF$z)
tbl_cuzick(DB$pdl1_tumor_h, DB$grade)
tbl_cuzick <-  function(x, z, test.type = "two.sided") {
# Data wrangling
z <- as.numeric(z)
df <- data.frame(x, z)
df <- df[complete.cases(df) , ]
x <- df$x
z <- df$z
# Statistics estimation
N <- length(z)
n <- unique(z)
ranks <- rank(x)
T <- sum(ranks*z)
p <- (table(z)/N)
E_Z <- sum(unique(z)*p)
E_T <- 0.5*N*(N+1)*E_Z
Var_Z <- sum(unique(z)^2*p)-E_Z^2
Var_T <- N^2*(N+1)/12*Var_Z
Zscore <- (T-E_T)/sqrt(Var_T)
if(test.type == "two.sided") {
pval <- 2*pnorm(-abs(Zscore))
} else if(test.type == "upper") {
pval <- pnorm(Zscore, lower.tail = FALSE)
} else pval <- pnorm(Zscore, lower.tail = TRUE)
# Building the final table
tbl_final <- matrix(
rbind(
format(Zscore, digits = 3),
format(pval, digits = 2, scientific = TRUE)
),
dimnames = list(
c("Z score", "P statistic"),
c("Value")
)
)
# Knitring the final table
knitr::kable(
tbl_final,
caption = "Cuzick test for trend across ordered groups",
align = c("c")
)
}
tbl_cuzick(DB$pdl1_tumor_h, DB$grade)
tbl_cuzick(DB$pdl1_tumor, DB$grade)
tbl_cuzick <-  function(x, z, test.type = "two.sided") {
# Data wrangling
z <- as.numeric(z)
df <- data.frame(x, z)
df <- df[complete.cases(df) , ]
x <- df$x
z <- df$z
# Statistics estimation
N <- length(z)
n <- unique(z)
ranks <- rank(x)
T <- sum(ranks*z)
p <- (table(z)/N)
E_Z <- sum(unique(z)*p)
E_T <- 0.5*N*(N+1)*E_Z
Var_Z <- sum(unique(z)^2*p)-E_Z^2
Var_T <- N^2*(N+1)/12*Var_Z
Zscore <- (T-E_T)/sqrt(Var_T)
if(test.type == "two.sided") {
pval <- 2*pnorm(-abs(Zscore))
} else if(test.type == "upper") {
pval <- pnorm(Zscore, lower.tail = FALSE)
} else pval <- pnorm(Zscore, lower.tail = TRUE)
# Building the final table
tbl_final <- matrix(
rbind(
format(Zscore, digits = 3),
format(pval, digits = 4, scientific = TRUE)
),
dimnames = list(
c("Z score", "P statistic"),
c("Value")
)
)
# Knitring the final table
knitr::kable(
tbl_final,
caption = "Cuzick test for trend across ordered groups",
align = c("c")
)
}
tbl_cuzick(DB$pdl1_tumor, DB$grade)
tbl_cuzick <-  function(x, z, test.type = "two.sided") {
# Data wrangling
z <- as.numeric(z)
df <- data.frame(x, z)
df <- df[complete.cases(df) , ]
x <- df$x
z <- df$z
# Statistics estimation
N <- length(z)
n <- unique(z)
ranks <- rank(x)
T <- sum(ranks*z)
p <- (table(z)/N)
E_Z <- sum(unique(z)*p)
E_T <- 0.5*N*(N+1)*E_Z
Var_Z <- sum(unique(z)^2*p)-E_Z^2
Var_T <- N^2*(N+1)/12*Var_Z
Zscore <- (T-E_T)/sqrt(Var_T)
if(test.type == "two.sided") {
pval <- 2*pnorm(-abs(Zscore))
} else if(test.type == "upper") {
pval <- pnorm(Zscore, lower.tail = FALSE)
} else pval <- pnorm(Zscore, lower.tail = TRUE)
# Building the final table
tbl_final <- matrix(
rbind(
format(Zscore, digits = 3),
format(pval, digits = 2)
),
dimnames = list(
c("Z score", "P statistic"),
c("Value")
)
)
# Knitring the final table
knitr::kable(
tbl_final,
caption = "Cuzick test for trend across ordered groups",
align = c("c")
)
}
tbl_cuzick(DB$pdl1_tumor, DB$grade)
tbl_cuzick <-  function(x, z, test.type = "two.sided") {
# Data wrangling
z <- as.numeric(z)
df <- data.frame(x, z)
df <- df[complete.cases(df) , ]
x <- df$x
z <- df$z
# Statistics estimation
N <- length(z)
n <- unique(z)
ranks <- rank(x)
T <- sum(ranks*z)
p <- (table(z)/N)
E_Z <- sum(unique(z)*p)
E_T <- 0.5*N*(N+1)*E_Z
Var_Z <- sum(unique(z)^2*p)-E_Z^2
Var_T <- N^2*(N+1)/12*Var_Z
Zscore <- (T-E_T)/sqrt(Var_T)
if(test.type == "two.sided") {
pval <- 2*pnorm(-abs(Zscore))
} else if(test.type == "upper") {
pval <- pnorm(Zscore, lower.tail = FALSE)
} else pval <- pnorm(Zscore, lower.tail = TRUE)
# Building the final table
tbl_final <- matrix(
rbind(
format(Zscore, digits = 3),
format(pval, scientific = TRUE)
),
dimnames = list(
c("Z score", "P statistic"),
c("Value")
)
)
# Knitring the final table
knitr::kable(
tbl_final,
caption = "Cuzick test for trend across ordered groups",
align = c("c")
)
}
tbl_cuzick(DB$pdl1_tumor, DB$grade)
tbl_cuzick(DB$foxp3_lymph_tumor, DB$grade)
tbl_cuzick(DB$foxp3_lymph_stroma, DB$grade)
tbl_cuzick <-  function(x, z, test.type = "two.sided") {
# Data wrangling
z <- as.numeric(z)
df <- data.frame(x, z)
df <- df[complete.cases(df) , ]
x <- df$x
z <- df$z
# Statistics estimation
N = length(z)
n = unique(z)
ranks=rank(x)
T = sum(ranks*z)
p = (table(z)/N)
E_Z = sum(unique(z)*p)
E_T = 0.5*N*(N+1)*E_Z
Var_Z = sum(unique(z)^2*p) - E_Z^2
Var_T = N^2*(N+1)/12*Var_Z
Zscore = (T-E_T)/sqrt(Var_T)
if(test.type == "two.sided") {
pval = 2*pnorm(-abs(Zscore))
} else if(test.type == "upper") {
pval = pnorm(Zscore,lower.tail=F)
} else 	pval = pnorm(Zscore,lower.tail=T)
out = data.frame(cbind(Zscore,pval,test.type))
colnames(out) = c("Z","p","testType")
return(out)
}
tbl_cuzick(DB$foxp3_lymph_stroma, DB$grade)
tbl_cuzick(DB$pdl1_tumor, DB$grade)
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
View(DB)
source('~/Dropbox/Research/Projects_Analysis/UAB/PDL1_Penis/Data/Tidy.R')
table(DB$grade, DB$high_grade)
install.packages("orrsratio")
install.packages("oddsratio")
library(oddsratio)
install.packages("questionr")
install.packages("questionr")
library(questionr)
unique(DB$sp)
length(unique(DB$sp))
View(DB)
View(DB)
View(DB)
